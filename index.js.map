{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/index.js"
  ],
  "names": [],
  "mappings
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "'use strict';\n\n/**\r\n * ScrollIt\r\n * ScrollIt.js(scroll•it•dot•js) makes it easy to make long, vertically scrolling pages.\r\n *\r\n * Latest version: https://github.com/cmpolis/scrollIt.js\r\n *\r\n * License <https://github.com/cmpolis/scrollIt.js/blob/master/LICENSE.txt>\r\n */\n(function ($) {\n    'use strict';\n\n    var pluginName = 'ScrollIt',\n        pluginVersion = '1.0.3';\n\n    /*\r\n     * OPTIONS\r\n     */\n    var defaults = {\n        upKey: 38,\n        downKey: 40,\n        easing: 'linear',\n        scrollTime: 600,\n        activeClass: 'active',\n        onPageChange: null,\n        topOffset: 0\n    };\n\n    $.scrollIt = function (options) {\n\n        /*\r\n         * DECLARATIONS\r\n         */\n        var settings = $.extend(defaults, options),\n            active = 0,\n            lastIndex = $('[data-scroll-index]:last').attr('data-scroll-index');\n\n        /*\r\n         * METHODS\r\n         */\n\n        /**\r\n         * navigate\r\n         *\r\n         * sets up navigation animation\r\n         */\n        var navigate = function navigate(ndx) {\n            if (ndx < 0 || ndx > lastIndex) return;\n\n            var targetTop = $('[data-scroll-index=' + ndx + ']').offset().top + settings.topOffset + 1;\n            $('html,body').animate({\n                scrollTop: targetTop,\n                easing: settings.easing\n            }, settings.scrollTime);\n        };\n\n        /**\r\n         * doScroll\r\n         *\r\n         * runs navigation() when criteria are met\r\n         */\n        var doScroll = function doScroll(e) {\n            var target = $(e.target).closest(\"[data-scroll-nav]\").attr('data-scroll-nav') || $(e.target).closest(\"[data-scroll-goto]\").attr('data-scroll-goto');\n            navigate(parseInt(target));\n        };\n\n        /**\r\n         * keyNavigation\r\n         *\r\n         * sets up keyboard navigation behavior\r\n         */\n        var keyNavigation = function keyNavigation(e) {\n            var key = e.which;\n            if ($('html,body').is(':animated') && (key == settings.upKey || key == settings.downKey)) {\n                return false;\n            }\n            if (key == settings.upKey && active > 0) {\n                navigate(parseInt(active) - 1);\n                return false;\n            } else if (key == settings.downKey && active < lastIndex) {\n                navigate(parseInt(active) + 1);\n                return false;\n            }\n            return true;\n        };\n\n        /**\r\n         * updateActive\r\n         *\r\n         * sets the currently active item\r\n         */\n        var updateActive = function updateActive(ndx) {\n            if (settings.onPageChange && ndx && active != ndx) settings.onPageChange(ndx);\n\n            active = ndx;\n            $('[data-scroll-nav]').removeClass(settings.activeClass);\n            $('[data-scroll-nav=' + ndx + ']').addClass(settings.activeClass);\n        };\n\n        /**\r\n         * watchActive\r\n         *\r\n         * watches currently active item and updates accordingly\r\n         */\n        var watchActive = function watchActive() {\n            var winTop = $(window).scrollTop();\n\n            var visible = $('[data-scroll-index]').filter(function (ndx, div) {\n                return winTop >= $(div).offset().top + settings.topOffset && winTop < $(div).offset().top + settings.topOffset + $(div).outerHeight();\n            });\n            var newActive = visible.first().attr('data-scroll-index');\n            updateActive(newActive);\n        };\n\n        /*\r\n         * runs methods\r\n         */\n        $(window).on('scroll', watchActive).scroll();\n\n        $(window).on('keydown', keyNavigation);\n\n        $('body').on('click', '[data-scroll-nav], [data-scroll-goto]', function (e) {\n            e.preventDefault();\n            doScroll(e);\n        });\n    };\n})(jQuery);\n\n$(function () {\n    $.scrollIt();\n});"
  ]
}